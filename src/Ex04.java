public class Ex04 {
    public static void main(String[] args) {
        String chuoiBanDau = "abcdefghij".repeat(100000);

        System.out.println("üîπ Ki·ªÉm tra v·ªõi StringBuilder...");
        long timeStart = System.nanoTime();
        kiemTraStringBuilder(chuoiBanDau);
        long timeEnd = System.nanoTime();
        System.out.println("‚è≥ Th·ªùi gian th·ª±c thi c·ªßa StringBuilder: " + (timeEnd - timeStart) / 1_000_000 + " ms\n");

        System.out.println("üîπ Ki·ªÉm tra v·ªõi StringBuffer...");
        timeStart = System.nanoTime();
        kiemTraStringBuffer(chuoiBanDau);
        timeEnd = System.nanoTime();
        System.out.println("‚è≥ Th·ªùi gian th·ª±c thi c·ªßa StringBuffer: " + (timeEnd - timeStart) / 1_000_000 + " ms");
    }

    private static void kiemTraStringBuilder(String str) {
        StringBuilder sb = new StringBuilder(str);

        sb.reverse();

        sb.insert(sb.length() / 2, "CHEN_CHUOI");

        sb.delete(sb.length() / 4, sb.length() / 3);

        sb.replace(sb.length() / 5, sb.length() / 4, "THAY_THE");
    }

    private static void kiemTraStringBuffer(String str) {
        StringBuffer sb = new StringBuffer(str);

        sb.reverse();

        sb.insert(sb.length() / 2, "CHEN_CHUOI");

        sb.delete(sb.length() / 4, sb.length() / 3);

        sb.replace(sb.length() / 5, sb.length() / 4, "THAY_THE");
    }
        // ================== K·∫æT LU·∫¨N ==================
        /*
         *  StringBuilder:
         *  ƒê·∫∑c ƒëi·ªÉm: Kh√¥ng an to√†n khi d√πng c√πng l√∫c b·ªüi nhi·ªÅu lu·ªìng (kh√¥ng ƒë·ªìng b·ªô).
         *  ∆Øu ƒëi·ªÉm: Nhanh h∆°n v√¨ kh√¥ng ph·∫£i t·ªën t√†i nguy√™n ƒë·ªÉ qu·∫£n l√Ω ƒë·ªìng b·ªô.
         *  Khi d√πng: Ph√π h·ª£p khi b·∫°n l√†m vi·ªác v·ªõi chu·ªói l·ªõn (nh∆∞ n·ªëi, ch·ªânh s·ª≠a chu·ªói) trong m·ªôt ·ª©ng d·ª•ng ch·ªâ ch·∫°y m·ªôt lu·ªìng (single-thread), kh√¥ng c·∫ßn lo xung ƒë·ªôt d·ªØ li·ªáu.
         *  V√≠ d·ª•: X√¢y d·ª±ng m·ªôt chu·ªói d√†i trong m·ªôt h√†m ƒë∆°n gi·∫£n, nh∆∞ t·∫°o b√°o c√°o hay log.
         *  StringBuffer:
         *  ƒê·∫∑c ƒëi·ªÉm: An to√†n khi nhi·ªÅu lu·ªìng c√πng d√πng (ƒë·ªìng b·ªô).
         *  ∆Øu ƒëi·ªÉm: ƒê·∫£m b·∫£o kh√¥ng b·ªã l·ªói d·ªØ li·ªáu khi nhi·ªÅu lu·ªìng c√πng ch·ªânh s·ª≠a chu·ªói.
         *  Nh∆∞·ª£c ƒëi·ªÉm: Ch·∫≠m h∆°n StringBuilder v√¨ ph·∫£i ki·ªÉm so√°t ƒë·ªìng b·ªô.
         *  Khi d√πng: D√πng trong ·ª©ng d·ª•ng ƒëa lu·ªìng (multi-thread), n∆°i nhi·ªÅu ti·∫øn tr√¨nh c√πng thao t√°c tr√™n chu·ªói, v√≠ d·ª• nh∆∞ h·ªá th·ªëng chat ho·∫∑c x·ª≠ l√Ω d·ªØ li·ªáu th·ªùi gian th·ª±c.
         *  K·∫øt lu·∫≠n:
         *  T·ªëc ƒë·ªô nhanh v√† kh√¥ng lo ƒëa lu·ªìng ‚Üí Ch·ªçn StringBuilder.
         *  An to√†n trong m√¥i tr∆∞·ªùng ƒëa lu·ªìng ‚Üí Ch·ªçn StringBuffer.
         */
}
